@model ShoppingCart.Entity.UserAdminModel
@{
    ViewBag.Title = "EditFullAddress";
}
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/AddToCart.js"></script>
    <ul class="breadcrumb">
        <li><a href="/Home/Index"><i class="fa fa-home"></i></a></li>
        <li><a href="/Account/Index">Account</a></li>
        <li><a href="/Account/UpdateAddress">Address Book</a></li>
        <li><a href="javascript:void(0)">Edit Address</a></li>
    </ul>
    <div class="row">
        <div id="content" class="col-sm-9">
            <h2>Edit Address</h2>
            <form action="/Account/EditFullAddress" method="post" enctype="multipart/form-data" class="form-horizontal">
                <fieldset>
                    <div class="form-group required">
                        <label class="col-sm-2 control-label" for="input-firstname">First Name</label>
                        <div class="col-sm-10">
                            @*<input type="text" name="firstname" value="" placeholder="First Name" id="input-firstname" class="form-control" />*@
                            @Html.TextBoxFor(x => x.FirstName, new { @maxlength = "20", @class = "form-control", @id = "input-firstname", @placeholder = "First Name" })
                        </div>
                        <p class="text-danger" style="padding-left:162px;height:auto">@Html.ValidationMessageFor(x => x.FirstName)</p>
                    </div>


                    <div class="form-group required">
                        <label class="col-sm-2 control-label" for="input-lastname">Last Name</label>
                        <div class="col-sm-10">
                            @*<input type="text" name="lastname" value="" placeholder="Last Name" id="input-lastname" class="form-control" />*@
                            @Html.TextBoxFor(x => x.LastName, new { @maxlength = "20", @class = "form-control", @id = "input-firstname", @placeholder = "Last Name" })
                        </div>
                        <p class="text-danger" style="padding-left:162px;">@Html.ValidationMessageFor(x => x.LastName)</p>
                    </div>

                    <div class="form-group required">
                        <label class="col-sm-2 control-label" for="input-address-1">Address 1</label>
                        <div class="col-sm-10">
                            @*<input type="text" name="address_1" value="" placeholder="Address 1" id="input-address-1" class="form-control" />*@
                            @Html.TextAreaFor(x => x.Address1, new { @class = "form-control" })
                        </div>
                        <p class="text-danger" style="padding-left:162px;">@Html.ValidationMessageFor(x => x.Address1)</p>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="input-address-2">Address 2</label>
                        <div class="col-sm-10">
                            @*<input type="text" name="address_2" value="" placeholder="Address 2" id="input-address-2" class="form-control" />*@
                            @Html.TextAreaFor(x => x.Address2, new { @class = "form-control" })
                        </div>
                        <p class="text-danger" style="padding-left:162px;">@Html.ValidationMessageFor(x => x.Address2)</p>
                    </div>
                   

                    <div class="form-group required">
                        <label class="col-sm-2 control-label" for="input-city">Zip Code</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.Zip, new { @maxlength = "6", @class = "form-control" })
                        </div>
                        <p class="text-danger" style="padding-left:162px;">@Html.ValidationMessageFor(x => x.Zip)</p>
                    </div>

                  
                    <div class="form-group required">
                        <label class="col-sm-2 control-label" for="input-country">Country</label>
                        <div class="col-sm-10">
                           
                            @*@Html.DropDownListFor(x => x.CountryId, new SelectList((System.Collections.IEnumerable)ViewData["CountryList"], "CountryId", "CountryName"), "Select Country", new { @id = "ddlCountry", @class = "form-control" })*@
                            @*@Html.DropDownListFor(x => x.CountryId, new List<SelectListItem>(), "Select Country", new { @id = "ddlCountry", @class = "form-control" })*@
                            @Html.DropDownListFor(x => x.CountryId, new SelectList((System.Collections.IEnumerable)ViewData["CountryList"], "CountryId", "CountryName"), "Select Country", new { @id = "ddlCountry", @class = "form-control" })
                        </div>
                        <p class="text-danger" style="padding-left:162px;">@Html.ValidationMessageFor(x => x.CountryId)</p>
                    </div>

                    <div class="form-group required">
                        <label class="col-sm-2 control-label" for="input-zone">Region / State</label>
                        <div class="col-sm-10">
                            @*<select name="zone_id" id="input-zone" class="form-control"></select>*@

                            @*@Html.DropDownListFor(x => x.StateId, new List<SelectListItem>(), "Select State", new { @id = "ddlState", @class = "form-control" })*@
                            @Html.DropDownListFor(x => x.StateId, new SelectList((System.Collections.IEnumerable)ViewData["StateList"], "StateId", "StateName"), "Select State", new { @id = "ddlState", @class = "form-control" })
                        </div>
                        <p class="text-danger" style="padding-left:162px;">@Html.ValidationMessageFor(x => x.StateId)</p>
                    </div>
                    <div class="form-group required">
                        <label class="col-sm-2 control-label" for="input-city">City</label>
                        <div class="col-sm-10">
                            @*  <input type="text" name="city" value="" placeholder="City" id="input-city" class="form-control" />*@

                            @*@Html.DropDownListFor(x => x.CityId, new List<SelectListItem>(), "Select City", new { @id = "ddlCity", @class = "form-control" })*@
                            @Html.DropDownListFor(x => x.CityId, new SelectList((System.Collections.IEnumerable)ViewData["CityList"], "CityId", "CityName"), "Select City", new { @id = "ddlCity", @class = "form-control" })
                        </div>
                        <p class="text-danger" style="padding-left:162px;">@Html.ValidationMessageFor(x => x.CityId)</p>
                    </div>
                    <div class="form-group required">
                        @*<label class="col-sm-2 control-label" for="input-city">IsActive</label>
                        <div class="col-sm-10">
                        </div>
                        <p class="text-danger" style="padding-left:162px;">@Html.ValidationMessageFor(x => x.IsActive)</p>*@
                        @Html.HiddenFor(x=>x.IsActive,new {@Value="true" })
                    </div>
                </fieldset>
                <div class="buttons clearfix">
                    <div class="pull-left"><a href="/Account/UpdateAddress" class="btn btn-default">Back</a></div>
                    <div class="pull-right">
                        <input value="Continue" class="btn btn-primary" type="submit">
                    </div>
                </div>
                @Html.HiddenFor(x=>x.RoleId,new {@Value=2 })
                @Html.HiddenFor(x=>x.Email)
                @Html.HiddenFor(x=>x.PhoneNumber)
                @Html.HiddenFor(x=>x.Password)
            </form>
        </div>
        @*<column id="column-right" class="col-sm-3 hidden-xs">
            <div class="list-group">
                <a href="http://plankter.co.inaccount/account" class="list-group-item">My Account</a>
                <a href="http://plankter.co.inaccount/edit" class="list-group-item">Edit Account</a> <a href="http://plankter.co.inaccount/password" class="list-group-item">Password</a>
                <a href="http://plankter.co.inaccount/address" class="list-group-item">Address Books</a> <a href="http://plankter.co.inaccount/wishlist" class="list-group-item">Wish List</a> <a href="http://plankter.co.inaccount/order" class="list-group-item">Order History</a> <a href="http://plankter.co.inaccount/download" class="list-group-item">Downloads</a> <a href="http://plankter.co.inaccount/reward" class="list-group-item">Reward Points</a> <a href="http://plankter.co.inaccount/return" class="list-group-item">Returns</a> <a href="http://plankter.co.inaccount/transaction" class="list-group-item">Transactions</a> <a href="http://plankter.co.inaccount/newsletter" class="list-group-item">Newsletter</a><a href="http://plankter.co.inaccount/recurring" class="list-group-item">Recurring payments</a>
                <a href="http://plankter.co.inaccount/logout" class="list-group-item">Logout</a>
            </div>
        </column>*@
    </div>
<script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script >

    $("#ddlCountry").change(function () {
        debugger;
        var countryId = $("#ddlCountry").val();
        $.ajax({
            type: "POST",
            url: "/Register/GetStates?id=" + countryId,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {

                $("#ddlState").find("option").remove();
                $("#ddlState").append("<option selected=selected value='0'>Select State</option>");
                $.each(data, function (index, value) {

                    $("#ddlState").append('<option value="' + value.StateId + '">' + value.StateName + '</option>');
                });
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("error " + XMLHttpRequest + " xhr " + textStatus + " status " + errorThrown);
            },

        });
    });

    $("#ddlState").change(function () {
        var stateId = $("#ddlState").val();
        $.ajax({

            type: "POST",
            url: "/Register/GetCity?id=" + stateId,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {

                $("#ddlCity").find("option").remove();
                $("#ddlCity").append("<option selected=selected value='0'>Select City</option>");
                $.each(data, function (index, value) {

                    $("#ddlCity").append('<option value="' + value.CityId + '">' + value.CityName + '</option>');
                });

            }

        });

    });
</script>